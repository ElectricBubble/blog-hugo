<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Posts on 雷系泡泡</title>
		<link>http://leixipaopao.com/posts/</link>
		<description>Recent content in Posts on 雷系泡泡</description>
		<generator>Hugo -- gohugo.io</generator>
		<language>zh-hans</language>
		<copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
		<lastBuildDate>Tue, 14 Apr 2020 13:57:23 +0800</lastBuildDate>
		<atom:link href="http://leixipaopao.com/posts/index.xml" rel="self" type="application/rss+xml" />
		
		<item>
			<title>WebDriverAgent 安装</title>
			<link>http://leixipaopao.com/posts/0005-wda-appium-installing/</link>
			<pubDate>Tue, 14 Apr 2020 13:57:23 +0800</pubDate>
			
			<guid>http://leixipaopao.com/posts/0005-wda-appium-installing/</guid>
			<description>做个记录，因为我又忘记了。。。 下载项目 这里选择的是 appium/WebDriverAgent git clone https://github.com/appium/WebDriverAgent.git 进入项目文件夹，通过 bootstrap.sh 脚本安装必要的依赖 cd WebDriverAgent ./Scripts/bootstrap.sh 在安装完成后，就可以用 Xcode 打开项目了 设</description>
			<content type="html"><![CDATA[

<blockquote>
<p>做个记录，因为我又忘记了。。。</p>
</blockquote>

<h2 id="下载项目">下载项目</h2>

<p>这里选择的是 <a href="https://github.com/appium/WebDriverAgent">appium/WebDriverAgent</a></p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">git clone https://github.com/appium/WebDriverAgent.git</code></pre></div>
<p>进入项目文件夹，通过 <code>bootstrap.sh</code> 脚本安装必要的依赖</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell"><span class="nb">cd</span> WebDriverAgent
./Scripts/bootstrap.sh</code></pre></div>
<p>在安装完成后，就可以用 <code>Xcode</code> 打开项目了</p>

<hr />

<h2 id="设置签名和证书">设置签名和证书</h2>

<p>按照下图步骤操作</p>

<p><img src="https://cdn.jsdelivr.net/gh/ElectricBubble/ImageHosting/img/20200414143308.png" alt="" /></p>

<p>再确认下图选项</p>

<p><img src="https://cdn.jsdelivr.net/gh/ElectricBubble/ImageHosting/img/20200414144138.png" alt="" /></p>

<p>再修改一个专属的 <code>Product Bundle Identifier</code></p>

<p>直接双击 <code>value</code> 部分可直接修改</p>

<p><img src="https://cdn.jsdelivr.net/gh/ElectricBubble/ImageHosting/img/image-20200414145045767.png" alt="" /></p>

<hr />

<h2 id="build-test">Build &amp; Test</h2>

<p>接下来，在左上角红框区域选择 <code>WebDriverAgentRunner</code> 以及指定的 <code>iOS设备</code>，</p>

<p>进行构建</p>

<p><img src="https://cdn.jsdelivr.net/gh/ElectricBubble/ImageHosting/img/20200414144501.png" alt="" /></p>

<p><img src="https://cdn.jsdelivr.net/gh/ElectricBubble/ImageHosting/img/20200414150242.png" style="zoom:30%;" /></p>

<p>然后开始执行 <code>Test</code></p>

<p>手机需要处于解锁状态</p>

<p><img src="https://cdn.jsdelivr.net/gh/ElectricBubble/ImageHosting/img/20200414150457.png" alt="" /></p>

<p>这时候看到一个错误提示</p>

<p><img src="https://cdn.jsdelivr.net/gh/ElectricBubble/ImageHosting/img/20200414150828.png" style="zoom:50%;" /></p>

<p>这是因为企图打开刚刚安装在目标设备上的名为 <code>WebDriverAgentRunner-Runner</code> 的 <code>App</code></p>

<p><img src="https://cdn.jsdelivr.net/gh/ElectricBubble/ImageHosting/img/20200414151158.png" alt="" /></p>

<p>而这个 <code>App</code> 暂时还不受信任</p>

<p><img src="https://cdn.jsdelivr.net/gh/ElectricBubble/ImageHosting/img/20200414151534.png" style="zoom:50%;" /></p>

<p>通过 <code>设置 ➡️ 通用 ➡️ 设备管理 ➡️ 开发者APP ➡️ 信任证书</code></p>

<p><img src="https://cdn.jsdelivr.net/gh/ElectricBubble/ImageHosting/img/20200414161524.png" style="zoom:50%;" /></p>

<p>这时候，再执行 <code>Test ⌘U</code></p>

<p>可以看到顶部的状态变更为了 <code>Testing WebDriverAgentRunner</code></p>

<p>从右上角的快捷按钮打开输出窗口，</p>

<p>可以看到 <code>目标设备IP</code> 已经开启了一个服务</p>

<p><img src="https://cdn.jsdelivr.net/gh/ElectricBubble/ImageHosting/img/20200414152726.png" alt="" /></p>

<hr />

<h2 id="iproxy">iproxy</h2>

<p>理论上，是可以直接访问 <code>http://192.168.2.36:8100/status</code></p>

<p>但实际上，并不行。。</p>

<p>这时候需要用到一个神器库 <a href="https://github.com/libimobiledevice/libimobiledevice">libimobiledevice</a></p>

<blockquote>
<p>一个光看都觉得🐂的不行的第三方库</p>
</blockquote>

<p>但是自己编译打包肯定是没必要的。。</p>

<p>所以搜了下，大部分都是用的 <code>brew</code> 安装，但我不是很想用。。</p>

<p>就找到了这个 <a href="https://github.com/benvium/libimobiledevice-macosx">benvium/libimobiledevice-macosx</a> 安装很简单</p>

<p>但是首次执行这些可执行文件的时候，需要去 <code>系统便好设置 ➡️ 安全性与隐私</code> 允许执行。。会比较麻烦。。</p>

<blockquote>
<p>有很多非常实用的程序，比如 <code>idevicescreenshot</code></p>
</blockquote>

<p>这里重点使用的是 <code>iproxy</code></p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">iproxy <span class="m">8100</span> <span class="m">8100</span></code></pre></div>
<blockquote>
<p>如果同时接入了多个 <code>iOS设备</code></p>

<p>需要使用 <code>idevice_id -l</code> 获取指定的 <code>UDID</code></p>

<p><code>iproxy LOCAL_TCP_PORT DEVICE_TCP_PORT UDID</code></p>
</blockquote>

<p>当启动了 <code>端口转发</code> 后会提示如下内容</p>

<p>就表示转发功能开启成功了</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">waiting <span class="k">for</span> connection</code></pre></div>
<p>这时候就可以通过访问 <a href="http://localhost:8100/status">http://localhost:8100/status</a> 得到如下内容</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">$ curl http://localhost:8100/status
<span class="o">{</span>
  <span class="s2">&#34;value&#34;</span> : <span class="o">{</span>
    <span class="s2">&#34;message&#34;</span> : <span class="s2">&#34;WebDriverAgent is ready to accept commands&#34;</span>,
    <span class="s2">&#34;state&#34;</span> : <span class="s2">&#34;success&#34;</span>,
    <span class="s2">&#34;os&#34;</span> : <span class="o">{</span>
      <span class="s2">&#34;name&#34;</span> : <span class="s2">&#34;iOS&#34;</span>,
      <span class="s2">&#34;version&#34;</span> : <span class="s2">&#34;13.4.1&#34;</span>,
      <span class="s2">&#34;sdkVersion&#34;</span> : <span class="s2">&#34;13.4&#34;</span>
    <span class="o">}</span>,
    <span class="s2">&#34;ios&#34;</span> : <span class="o">{</span>
      <span class="s2">&#34;simulatorVersion&#34;</span> : <span class="s2">&#34;13.4.1&#34;</span>,
      <span class="s2">&#34;ip&#34;</span> : <span class="s2">&#34;192.168.2.36&#34;</span>
    <span class="o">}</span>,
    <span class="s2">&#34;ready&#34;</span> : true,
    <span class="s2">&#34;build&#34;</span> : <span class="o">{</span>
      <span class="s2">&#34;time&#34;</span> : <span class="s2">&#34;Apr 14 2020 13:53:07&#34;</span>,
      <span class="s2">&#34;productBundleIdentifier&#34;</span> : <span class="s2">&#34;com.facebook.WebDriverAgentRunner&#34;</span>
    <span class="o">}</span>
  <span class="o">}</span>,
  <span class="s2">&#34;sessionId&#34;</span> : <span class="s2">&#34;9D808D1D-4B00-4373-9589-BF142948F400&#34;</span>
<span class="o">}</span>%</code></pre></div>
<p>到这里就正式结束了</p>

<hr />

<p>可能设备需要先进行下图的添加</p>

<p>但是我很久之前就加过了，也有点忘记当时因为啥要先添加了。。</p>

<p>想起来再记录下。。。</p>

<p><img src="https://cdn.jsdelivr.net/gh/ElectricBubble/ImageHosting/img/20200414145933.png" alt="" /></p>
]]></content>
		</item>
		
		<item>
			<title>Vue 使用 UI 组件库 Vuetify 修改样式</title>
			<link>http://leixipaopao.com/posts/0004-vue-vuetify-deep-selectors/</link>
			<pubDate>Fri, 10 Apr 2020 15:37:18 +0800</pubDate>
			
			<guid>http://leixipaopao.com/posts/0004-vue-vuetify-deep-selectors/</guid>
			<description>从群友那儿学来了一个前端词汇 穿透 原因是我使用 Vuetify 的 文本框 v-text-field 使用了 dense 前/后置 图标就不能 垂直居中 了 先来一个没有 dense 的 &amp;lt;v-text-field outlined solo single-line clearable prepend-inner-icon=&amp;#34;mdi-text&amp;#34; hide-details=&amp;#34;auto&amp;#34; label=&amp;#3</description>
			<content type="html"><![CDATA[<blockquote>
<p>从群友那儿学来了一个前端词汇 <code>穿透</code></p>
</blockquote>

<p>原因是我使用 <code>Vuetify</code> 的 文本框 <code>v-text-field</code></p>

<p>使用了 <code>dense</code>  前/后置 图标就不能 <code>垂直居中</code> 了</p>

<p>先来一个没有 <code>dense</code> 的</p>
<div class="highlight"><pre class="chroma"><code class="language-vue" data-lang="vue"><span class="p">&lt;</span><span class="nt">v-text-field</span>
  <span class="na">outlined</span>
  <span class="na">solo</span>
  <span class="na">single</span><span class="nt">-line</span>
  <span class="na">clearable</span>
  <span class="na">prepend</span><span class="nt">-inner-icon</span><span class="err">=&#34;</span><span class="na">mdi</span><span class="nt">-text</span><span class="err">&#34;</span>
  <span class="na">hide</span><span class="nt">-details</span><span class="err">=&#34;</span><span class="na">auto</span><span class="err">&#34;</span>
  <span class="na">label</span><span class="o">=</span><span class="s">&#34;请输入&#34;</span>
<span class="p">&gt;</span><span class="o">&lt;</span><span class="err">/v-text-field&gt;</span></code></pre></div>
<p>效果图如下：</p>

<p><img src="https://cdn.jsdelivr.net/gh/ElectricBubble/ImageHosting/img/20200410155314.png" alt="" /></p>

<blockquote>
<p>看着感觉有点“胖”。。。</p>
</blockquote>

<p>这时候 前置图标 还是居中的</p>

<p>这时候加上 <code>dense</code></p>
<div class="highlight"><pre class="chroma"><code class="language-vue" data-lang="vue"><span class="p">&lt;</span><span class="nt">v-text-field</span>
  <span class="na">dense</span>
  <span class="na">outlined</span>
  <span class="na">solo</span>
  <span class="na">single</span><span class="nt">-line</span>
  <span class="na">clearable</span>
  <span class="na">prepend</span><span class="nt">-inner-icon</span><span class="err">=&#34;</span><span class="na">mdi</span><span class="nt">-text</span><span class="err">&#34;</span>
  <span class="na">hide</span><span class="nt">-details</span><span class="err">=&#34;</span><span class="na">auto</span><span class="err">&#34;</span>
  <span class="na">label</span><span class="o">=</span><span class="s">&#34;请输入&#34;</span>
<span class="p">&gt;</span><span class="o">&lt;</span><span class="err">/v-text-field&gt;</span></code></pre></div>
<p>再看效果图：</p>

<p><img src="https://cdn.jsdelivr.net/gh/ElectricBubble/ImageHosting/img/20200410160707.png" alt="" /></p>

<p>明显图标下移了！看着相当难受啊！</p>

<p>这时候可以看下页面元素的样式，这就是没能居中的原因</p>

<p><img src="https://cdn.jsdelivr.net/gh/ElectricBubble/ImageHosting/img/20200410160931.png" alt="" /></p>

<p>然后找到 <code>vuetify.css</code> 发现是这么定义的，这。。太为难我了。。</p>

<p><img src="https://cdn.jsdelivr.net/gh/ElectricBubble/ImageHosting/img/20200410162257.png" alt="" /></p>

<p>这时候嘛，作为一个小菜鸟，第一反应，当然是直接修改成 <code>margin-top: 0;</code> 咯</p>
<div class="highlight"><pre class="chroma"><code class="language-css" data-lang="css"><span class="o">&lt;</span><span class="nt">style</span> <span class="nt">scoped</span><span class="o">&gt;</span>
<span class="p">.</span><span class="nc">v-text-field</span><span class="p">.</span><span class="nc">v-input--dense</span> <span class="p">.</span><span class="nc">v-input__prepend-inner</span> <span class="p">.</span><span class="nc">v-input__icon</span> <span class="o">&gt;</span> <span class="p">.</span><span class="nc">v-icon</span><span class="o">,</span>
<span class="p">.</span><span class="nc">v-text-field</span><span class="p">.</span><span class="nc">v-input--dense</span> <span class="p">.</span><span class="nc">v-input__append-inner</span> <span class="p">.</span><span class="nc">v-input__icon</span> <span class="o">&gt;</span> <span class="p">.</span><span class="nc">v-icon</span> <span class="p">{</span>
  <span class="k">margin-top</span><span class="p">:</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
<span class="o">&lt;</span><span class="nt">style</span><span class="o">&gt;</span></code></pre></div>
<p>但是，这时候，</p>

<p>刷新了页面，</p>

<p>清理了浏览器缓存，</p>

<p>再看这个元素的样式，发现！</p>

<p>还是 <code>margin-top: 8px;</code>！</p>

<p>这时候不慌，我在 <code>style</code> 标签里加了 <code>scoped</code> 表示仅作用在当前的 <code>vue</code> 组件，</p>

<p>如果删掉 <code>scoped</code> 呢，的确是可以让 <code>前置图标</code> 居中，图就不放了（懒）。</p>

<p>但是，就真的只有这种方式？</p>

<p>当然不，最终我放了个大招，<code>面向群友编程</code></p>

<p>于是就学到一个新词 <code>穿透</code></p>

<p>在 <a href="https://vue-loader.vuejs.org/zh/guide/scoped-css.html#深度作用选择器">Vue 官网</a> 也是有提到过的，新知识点 get。</p>

<p>这时候赶紧改起来</p>
<div class="highlight"><pre class="chroma"><code class="language-vue" data-lang="vue"><span class="p">&lt;</span><span class="nt">style</span> <span class="na">scoped</span><span class="p">&gt;</span>
<span class="o">&gt;&gt;&gt;</span> <span class="p">.</span><span class="nx">v</span><span class="o">-</span><span class="nx">text</span><span class="o">-</span><span class="nx">field</span><span class="p">.</span><span class="nx">v</span><span class="o">-</span><span class="nx">input</span><span class="o">--</span><span class="nx">dense</span> <span class="p">.</span><span class="nx">v</span><span class="o">-</span><span class="nx">input__prepend</span><span class="o">-</span><span class="nx">inner</span> <span class="p">.</span><span class="nx">v</span><span class="o">-</span><span class="nx">input__icon</span> <span class="o">&gt;</span> <span class="p">.</span><span class="nx">v</span><span class="o">-</span><span class="nx">icon</span><span class="p">,</span>
<span class="o">&gt;&gt;&gt;</span> <span class="p">.</span><span class="nx">v</span><span class="o">-</span><span class="nx">text</span><span class="o">-</span><span class="nx">field</span><span class="p">.</span><span class="nx">v</span><span class="o">-</span><span class="nx">input</span><span class="o">--</span><span class="nx">dense</span> <span class="p">.</span><span class="nx">v</span><span class="o">-</span><span class="nx">input__append</span><span class="o">-</span><span class="nx">inner</span> <span class="p">.</span><span class="nx">v</span><span class="o">-</span><span class="nx">input__icon</span> <span class="o">&gt;</span> <span class="p">.</span><span class="nx">v</span><span class="o">-</span><span class="nx">icon</span> <span class="p">{</span>
  <span class="nx">margin</span><span class="o">-</span><span class="nx">top</span><span class="o">:</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
<span class="p">&lt;</span><span class="nt">style</span><span class="p">&gt;</span></code></pre></div>
<p>再看效果图：</p>

<p><img src="https://cdn.jsdelivr.net/gh/ElectricBubble/ImageHosting/img/20200410164012.png" alt="" /></p>

<p>✌️ 居中了，看着舒服多～</p>
]]></content>
		</item>
		
		<item>
			<title>Vue 使用 UI 组件库 Vuetify 创建项目</title>
			<link>http://leixipaopao.com/posts/0003-vue-vuetify-create/</link>
			<pubDate>Thu, 02 Apr 2020 13:59:26 +0800</pubDate>
			
			<guid>http://leixipaopao.com/posts/0003-vue-vuetify-create/</guid>
			<description>前端一直尝试在学习，也断断续续的使用着 Vue.js 然而我的大脑缓存太不给力了，总是学了就忘，忘了就查，查了再用，用完了继续忘，总是去搜索也是麻烦，所以</description>
			<content type="html"><![CDATA[

<p>前端一直尝试在学习，也断断续续的使用着 <code>Vue.js</code> 然而我的大脑缓存太不给力了，总是学了就忘，忘了就查，查了再用，用完了继续忘，总是去搜索也是麻烦，所以决定还是自己记录一下。</p>

<h2 id="创建项目">创建项目</h2>

<ul>
<li><p>使用 <code>Vue UI</code> 创建项目</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">$ vue ui</code></pre></div>
<p>访问 <a href="http://localhost:8000">http://localhost:8000</a> 操作即可。（ 这页面很酷啊！）</p></li>
</ul>

<p><br /></p>

<ul>
<li><p>使用 <code>Vue CLI</code> 创建项目</p>

<p>会在当前路径下新建一个项目名称的文件夹。</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">$ vue create 项目名称</code></pre></div>
<p>这里使用按键 <code>j/k</code> 或 <code>方向键</code> 上下选择，<code>回车键</code> 确定选择，我这里选择 <code>Manually select features</code> 进行手动选择。</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">Vue CLI v4.2.3
? Please pick a preset: 
first-preset <span class="o">(</span>router, babel, eslint<span class="o">)</span> 
default <span class="o">(</span>babel, eslint<span class="o">)</span> 
❯ Manually <span class="k">select</span> features </code></pre></div>
<p>使用 <code>空格键</code> 勾选 ✔︎ <code>回车键</code>进入下一步。</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">Vue CLI v4.2.3
? Please pick a preset: Manually <span class="k">select</span> features
? Check the features needed <span class="k">for</span> your project: 
◉ Babel
◯ TypeScript
◯ Progressive Web App <span class="o">(</span>PWA<span class="o">)</span> Support
◉ Router
◉ Vuex
❯◉ CSS Pre-processors
◉ Linter / Formatter
◯ Unit Testing
◯ E2E Testing</code></pre></div>
<p>因为我选择了 <code>Router</code> ，所以还有一个选择，<code>y</code> 的话，就是使用 <code>History</code> 模式，否则就是 <code>Hash</code> 模式。</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">Vue CLI v4.2.3
...
? Use <span class="nb">history</span> mode <span class="k">for</span> router? <span class="o">(</span>Requires proper server setup <span class="k">for</span> index fallback 
in production<span class="o">)</span> <span class="o">(</span>Y/n<span class="o">)</span> y</code></pre></div>
<p>我还选择了 <code>CSS Pre-processors</code> ，所以继续选择，这里我选择了 <code>Less</code> 。</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">Vue CLI v4.2.3
...
? Pick a CSS pre-processor <span class="o">(</span>PostCSS, Autoprefixer and CSS Modules are supported 
by default<span class="o">)</span>: 
Sass/SCSS <span class="o">(</span>with dart-sass<span class="o">)</span> 
Sass/SCSS <span class="o">(</span>with node-sass<span class="o">)</span> 
❯ Less 
Stylus </code></pre></div>
<p>图个省事儿，直接选择 <code>ESLint + Prettier</code> 。</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">Vue CLI v4.2.3
...
? Pick a linter / formatter config: 
ESLint with error prevention only 
ESLint + Airbnb config 
ESLint + Standard config 
❯ ESLint + Prettier </code></pre></div>
<p>这里可以多选，我个人选择 <code>Lint on save</code> 。</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">Vue CLI v4.2.3
...
? Pick additional lint features: <span class="o">(</span>Press &lt;space&gt; to <span class="k">select</span>, &lt;a&gt; to toggle all, &lt;i
&gt; to invert selection<span class="o">)</span>
❯◉ Lint on save
◯ Lint and fix on commit</code></pre></div>
<p>这里选择配置文件单独存放还是全都放在一个文件里里，我选择 <code>In dedicated config files</code> 独立存放，看着舒服。</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">Vue CLI v4.2.3
...
? Where <span class="k">do</span> you prefer placing config <span class="k">for</span> Babel, ESLint, etc.? <span class="o">(</span>Use arrow keys<span class="o">)</span>
❯ In dedicated config files 
In package.json </code></pre></div>
<p>是否把当前的项目创建配置作为一个预设配置，方便下次快速创建。</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">Vue CLI v4.2.3
...
? Save this as a preset <span class="k">for</span> future projects? <span class="o">(</span>y/N<span class="o">)</span> </code></pre></div></li>
</ul>

<h2 id="运行项目">运行项目</h2>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell"> $ <span class="nb">cd</span> 项目名称
 $ npm run serve</code></pre></div>
<p>访问 <a href="http://localhost:8080">http://localhost:8080</a></p>

<p><img src="https://cdn.jsdelivr.net/gh/ElectricBubble/ImageHosting/img/20200402111547.png" alt="" /></p>

<h2 id="vuetify-安装">Vuetify 安装</h2>

<p>接下来开始使用 <code>Vuetify</code> UI 组件库。</p>

<p>这里我选择用 <code>Vue UI</code> 进行安装。（ 就是想用这个很酷的管理页面 ）</p>

<p>也可以使用其他的安装方式 <a href="https://vuetifyjs.com/zh-Hans/getting-started/quick-start/">Vuetify 入门指南</a> 。</p>

<p>先将当前创建的项目导入到 <code>Vue 项目管理器</code></p>

<p><img src="https://cdn.jsdelivr.net/gh/ElectricBubble/ImageHosting/img/20200402113605.png" alt="" /></p>

<p>导入完成后从左侧菜单栏进入 <code>插件</code></p>

<p><img src="https://cdn.jsdelivr.net/gh/ElectricBubble/ImageHosting/img/20200402114030.png" alt="" /></p>

<p>右侧 <code>添加插件</code></p>

<p><img src="https://cdn.jsdelivr.net/gh/ElectricBubble/ImageHosting/img/20200402114131.png" alt="" /></p>

<p>输入 <code>Vuetify</code> 选中第一个，右下角 <code>安装</code></p>

<p><img src="https://cdn.jsdelivr.net/gh/ElectricBubble/ImageHosting/img/20200402120334.png" alt="" /></p>

<p>完成安装后，我们再访问 <a href="http://localhost:8080">http://localhost:8080</a> 可以看到新的界面。</p>

<p><img src="https://cdn.jsdelivr.net/gh/ElectricBubble/ImageHosting/img/20200402121012.png" alt="" /></p>

<h2 id="本地依赖字体和图标">本地依赖字体和图标</h2>

<p><code>Vuetify</code> 安装完成后， 项目路径下 <code>public/index.html</code> 会被增加 2个 <code>stylesheet</code>：</p>
<div class="highlight"><pre class="chroma"><code class="language-html" data-lang="html"><span class="p">&lt;</span><span class="nt">link</span> <span class="na">rel</span><span class="o">=</span><span class="s">&#34;stylesheet&#34;</span> <span class="na">href</span><span class="o">=</span><span class="s">&#34;https://fonts.googleapis.com/css?family=Roboto:100,300,400,500,700,900&#34;</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">link</span> <span class="na">rel</span><span class="o">=</span><span class="s">&#34;stylesheet&#34;</span> <span class="na">href</span><span class="o">=</span><span class="s">&#34;https://cdn.jsdelivr.net/npm/@mdi/font@latest/css/materialdesignicons.min.css&#34;</span><span class="p">&gt;</span></code></pre></div>
<p>默认是使用的 <code>CDN</code> 访问，我需要作为本地依赖：</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">$ npm install @mdi/font -D
$ npm install material-design-icons-iconfont -D</code></pre></div>
<p>安装完成后，修改项目路径下 <code>src/plugins/vuetify.js</code> 分别 <code>import</code> 这两个 <code>css</code>：</p>
<div class="highlight"><pre class="chroma"><code class="language-javascript" data-lang="javascript"><span class="kr">import</span> <span class="nx">Vue</span> <span class="nx">from</span> <span class="s2">&#34;vue&#34;</span><span class="p">;</span>
<span class="kr">import</span> <span class="nx">Vuetify</span> <span class="nx">from</span> <span class="s2">&#34;vuetify/lib&#34;</span><span class="p">;</span>
<span class="kr">import</span> <span class="s2">&#34;@mdi/font/css/materialdesignicons.css&#34;</span><span class="p">;</span>
<span class="kr">import</span> <span class="s2">&#34;material-design-icons-iconfont/dist/material-design-icons.css&#34;</span><span class="p">;</span>

<span class="nx">Vue</span><span class="p">.</span><span class="nx">use</span><span class="p">(</span><span class="nx">Vuetify</span><span class="p">);</span>

<span class="kr">export</span> <span class="k">default</span> <span class="k">new</span> <span class="nx">Vuetify</span><span class="p">({});</span>
</code></pre></div>
<p>然后删除 <code>public/index.html</code> 里的 2个 <code>stylesheet</code> ，再访问就不会像之前那么慢了。</p>
]]></content>
		</item>
		
		<item>
			<title>使用 Golang 编写的 Web版 Nmon Analyser</title>
			<link>http://leixipaopao.com/posts/0002-golang-nmon-analyser/</link>
			<pubDate>Tue, 31 Mar 2020 15:40:39 +0800</pubDate>
			
			<guid>http://leixipaopao.com/posts/0002-golang-nmon-analyser/</guid>
			<description>模仿 Nmon-Analyser（Excel版本）的 Web 版本。 原本做好了就放 线上 没咋去管了，今天才发现原来线上的版本还引用了一个访问很慢的 css 文件</description>
			<content type="html"><![CDATA[<p>模仿 Nmon-Analyser（Excel版本）的 Web 版本。</p>

<p>原本做好了就放 <a href="http://nmon.leixipaopao.com">线上</a> 没咋去管了，今天才发现原来线上的版本还引用了一个访问很慢的 css 文件，还一直以为是我服务器的带宽太低了。。。</p>

<p>之前也想着做一个离线版本，拖到现在。。</p>

<p>线上的版本是前后端分离的，为了偷个懒，我就继续用 <a href="https://github.com/mjibson/esc">esc</a> 把前端都给打包进来了。</p>

<p>所以呢，访问页面的端口也是被固定了</p>

<p><a href="https://github.com/ElectricBubble/nmon-analyser-releases/releases/latest">下载地址</a></p>

<p>执行后，浏览器 (Chrome/Safari) <a href="http://localhost:10001/nmon/">访问</a> <code>http://localhost:10001/nmon/</code></p>

<p>通过左上角的上传 nmon 文件 <img src="https://cdn.jsdelivr.net/gh/ElectricBubble/ImageHosting/img/20200330171254.png" style="zoom:50%;" /></p>

<p>解析完毕后，旁边的 tab栏 会显示全部分类，切换可看到对应的图表</p>

<p><img src="https://cdn.jsdelivr.net/gh/ElectricBubble/ImageHosting/img/20200330171552.png" alt="" /></p>

<p>对应图表📈的底下，还有一个简陋的对应指标的平均值</p>

<p><br/></p>

<p><br/></p>

<p><font size=1>因为感觉代码写的一般。。。就不放源码了。。</font></p>
]]></content>
		</item>
		
		<item>
			<title>Golang 判断系统是 32/64-bit</title>
			<link>http://leixipaopao.com/posts/0001-golang-how-to-know-the-32-or-64-bit/</link>
			<pubDate>Thu, 26 Mar 2020 18:10:56 +0800</pubDate>
			
			<guid>http://leixipaopao.com/posts/0001-golang-how-to-know-the-32-or-64-bit/</guid>
			<description>bit := 32 &amp;lt;&amp;lt; (^uint(0) &amp;gt;&amp;gt; 63) 在 64位 的系统中 bit 的值为 64 在 32位 的系统中 bit 的值为 32 64-bit 32-bit 32 &amp;lt;&amp;lt; (^uint(0) &amp;gt;&amp;gt; 63) 64 32 ^uint(0) 二进制的值 64个1 32个1 ^uint(0) &amp;gt;&amp;gt; 63 二进制的值 1 0 32 &amp;lt;&amp;lt; 1 32</description>
			<content type="html"><![CDATA[<p><code>bit := 32 &lt;&lt; (^uint(0) &gt;&gt; 63)</code></p>

<p>在  <code>64位</code> 的系统中  <code>bit</code> 的值为 <code>64</code></p>

<p>在  <code>32位</code> 的系统中  <code>bit</code> 的值为 <code>32</code></p>

<table>
<thead>
<tr>
<th align="center"></th>
<th align="center">64-bit</th>
<th align="center">32-bit</th>
</tr>
</thead>

<tbody>
<tr>
<td align="center"><code>32 &lt;&lt; (^uint(0) &gt;&gt; 63)</code></td>
<td align="center">64</td>
<td align="center">32</td>
</tr>

<tr>
<td align="center"><code>^uint(0)</code> 二进制的值</td>
<td align="center">64个1</td>
<td align="center">32个1</td>
</tr>

<tr>
<td align="center"><code>^uint(0) &gt;&gt; 63</code> 二进制的值</td>
<td align="center">1</td>
<td align="center">0</td>
</tr>

<tr>
<td align="center"></td>
<td align="center"><code>32 &lt;&lt; 1</code></td>
<td align="center"><code>32 &lt;&lt; 0</code></td>
</tr>

<tr>
<td align="center"></td>
<td align="center"><code>32 * 2^1</code></td>
<td align="center"><code>32 * 2^0</code></td>
</tr>

<tr>
<td align="center"></td>
<td align="center"><code>32 * 2</code></td>
<td align="center"><code>32 * 1</code></td>
</tr>
</tbody>
</table>
]]></content>
		</item>
		
	</channel>
</rss>
